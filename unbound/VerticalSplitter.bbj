use ::BBjWidget/BBjWidget.bbj::BBjWidget

rem /**
rem  * A sample BBj Widget Implementation
rem  */
class public VerticalSplitter extends BBjWidget

    field private BBjButton btnClick!
    field private BBjNumber clickCount
    
    field private BBjNumber W
    field private BBjNumber H
    field private BBjChildWindow CwLeft!
    field private BBjChildWindow CwRight!
    field private BBjControl UiwLeft!
    field private BBjControl UiwRight!
    
    field private BBjStaticText Split!
    field private BBjNumber      SplitPos
    field private BBjNumber      dragging=0    
    
    rem --------------------- constructors -------------------------------------
    
    rem /**
    rem  * disabled default constructor
    rem  */
    method private VerticalSplitter()
    methodend

    rem /**
    rem  * The constructor that creates the widget on wnd!
    rem * @param BBjWindow wnd!: parent window
    rem * @param BBjInt id: the control ID
    rem * @param BBjInt x: x-location
    rem * @param BBjInt y: y-location
    rem * @param BBjInt w: width
    rem * @param BBjInt h: height
    rem */
    method public VerticalSplitter(BBjWindow wnd!, BBjInt id!, BBjInt x!, BBjInt y!, BBjInt w!, BBjInt h!)
        #super!.create(wnd!,id!,x!,y!,w!,h!)
    methodend
    
    rem --------------------- event constant(s) -------------------------------------
    

    rem ---------------------- methods from BBjWidget -------------------------------- 

    rem /**
    rem  * @Override
    rem  * This method is called whenever the widget needs to be rendered
    rem  * @param Boolean f_init!: if TRUE the control is rendered for the first time so this method has to perform initial rendering
    rem  */
    method public void redraw(Boolean f_init!)
        if (f_init!) then

            #W = #getWidth()
            #H = #getHeight()
            
            #SplitPos = int((#W-8)/2)
            #CwLeft!  = #getCanvas().addChildWindow(100,0,          0,#SplitPos-4-20,#H,"",$00000800$,BBjAPI().getSysGui().getAvailableContext())
            #CwRight! = #getCanvas().addChildWindow(101,#SplitPos+2,0,#W-#SplitPos-4,#H,"",$00000800$,BBjAPI().getSysGui().getAvailableContext())
    
            #Split!   = #getCanvas().addStaticText(200,#SplitPos-2,0,4,#H,"")
    
            #Split!.setCursor(32644); rem ' West-East
            #Split!.setBackColor(BBjAPI().makeColor("LTGRAY"))
            
            #getCanvas().setCallback(BBjAPI.ON_MOUSE_DOWN,#this!,"onSplitMouseDown")
            #getCanvas().setCallback(BBjAPI.ON_MOUSE_UP  ,#this!,"onSplitMouseUp")
            #getCanvas().setCallback(BBjAPI.ON_MOUSE_MOVE,#this!,"onSplitMouseMove")
        FI

        
    methodend

    method public BBjChildWindow getLeftCanvas()
    
        methodret #CwLeft!
        
    methodend

    method public BBjChildWindow getRightCanvas()
    
        methodret #CwRight!
        
    methodend
    
    method public void setLeftCtrl(BBjControl uiw!)
        
            #UiwLeft! = uiw!
            #delayedResize(null())
            
    methodend

    method public void setRightCtrl(BBjControl uiw!)
        
            #UiwRight! = uiw!
            #delayedResize(null())
            
    methodend
    
    method public void setSize(BBjNumber w!, BBjNumber h!)

        BBjAPI().removeTimer("delay",err=*next)
        
        ratio = #SplitPos/#W
    
        #H = h!
        #W = w!
        #SplitPos = int(#W*ratio)
        
        
        BBjAPI().createTimer("delay", .01, #this!, "delayedResize")
            
    methodend
    
    method public void delayedResize(BBjTimerEvent ev!)
    
        BBjAPI().removeTimer("delay",err=*next)
        #getCanvas().setSize(#W,#H)
        
        #CwLeft! .setSize(    #SplitPos-4   ,#H)
        #CwRight!.setLocation(#SplitPos+4   ,0)
        #CwRight!.setSize(    #W-#SplitPos-4,#H)
    
        if #UiwLeft! <> null() then
           #UiwLeft!.setSize(#SplitPos-4,#H)
        fi

        if #UiwRight! <> null() then

           #UiwRight!.setSize(#W-#SplitPos-4,#H)
        fi
    
    #Split!.setLocation(#SplitPos,0)
    #Split!.setSize(4,#H)
    
    methodend
    
    method public void onSplitMouseDown(BBjMouseDownEvent ev!)
        #dragging=1
        #CwRight!.setEnabled(0)
        #CwLeft!.setEnabled(0)

        BBjAPI().removeTimer("delay",err=*next)
    methodend
    
    method public void onSplitMouseUp(BBjMouseUpEvent ev!)
        #dragging=0
        #CwRight!.setEnabled(1)
        #CwLeft!.setEnabled(1)
        
        BBjAPI().createTimer("delay", .5, #this!, "delayedResize")
    methodend    

    method public void onSplitMouseMove(BBjMouseMoveEvent ev!)

        if #dragging then
           #SplitPos = min(ev!.getX())
           #Split!.setLocation(#SplitPos,0)
        fi
        
    methodend  


classend


About$ = "https://github.com/BBj-Plugins/BusinessUIComponents/blob/master/unbound/VerticalSplitter.bbj"
print 'cs',About$,'title'(About$),'rs'
? 'hide'

wnd! = BBjAPI().openSysGui("X0").addWindow(10,10,900,600,"BBj Vertical Splitter Demo")
wnd!        .setCallback(BBjAPI.ON_CLOSE,"byebye")
wnd!        .setCallback(BBjAPI.ON_RESIZE,"resize")

splitter! = new VerticalSplitter(wnd!,100,0,0,900,600)

leftbtn! = splitter!.getLeftCanvas().addButton(100,0,0,200,200,"LEFT")
splitter!.setLeftCtrl(leftbtn!)

rightbtn! = splitter!.getRightCanvas().addButton(100,0,0,200,200,"RIGHT")
splitter!.setRightCtrl(rightbtn!)

process_events

resize:
  ev! = BBjAPI().getLastEvent()
  splitter!.setSize(ev!.getWidth(),ev!.getHeight())
return

byebye:
    bye
